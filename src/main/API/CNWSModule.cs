//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public class CNWSModule : CGameObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CNWSModule(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NWNXLibPINVOKE.CNWSModule_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CNWSModule obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CNWSModule(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public SWIGTYPE_p_CExoLinkedListT_NWMODULEEXPANSION_t m_lstModuleExpansion {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lstModuleExpansion_set(swigCPtr, SWIGTYPE_p_CExoLinkedListT_NWMODULEEXPANSION_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lstModuleExpansion_get(swigCPtr);
      SWIGTYPE_p_CExoLinkedListT_NWMODULEEXPANSION_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoLinkedListT_NWMODULEEXPANSION_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoLinkedListT_NWMODULECUTSCENE_t m_lstModuleCutScene {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lstModuleCutScene_set(swigCPtr, SWIGTYPE_p_CExoLinkedListT_NWMODULECUTSCENE_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lstModuleCutScene_get(swigCPtr);
      SWIGTYPE_p_CExoLinkedListT_NWMODULECUTSCENE_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoLinkedListT_NWMODULECUTSCENE_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoLinkedListT_CResRef_t m_lstModuleArea {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lstModuleArea_set(swigCPtr, SWIGTYPE_p_CExoLinkedListT_CResRef_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lstModuleArea_get(swigCPtr);
      SWIGTYPE_p_CExoLinkedListT_CResRef_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoLinkedListT_CResRef_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoArrayListT_unsigned_int_t m_lstModuleAreaID {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lstModuleAreaID_set(swigCPtr, SWIGTYPE_p_CExoArrayListT_unsigned_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lstModuleAreaID_get(swigCPtr);
      SWIGTYPE_p_CExoArrayListT_unsigned_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoArrayListT_unsigned_int_t(cPtr, false);
      return ret;
    } 
  }

  public int m_nLastAreaAIUpdatePos {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastAreaAIUpdatePos_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_nLastAreaAIUpdatePos_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoLinkedListT_NWPLAYERLISTITEM_t m_lstPlayerInfo {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lstPlayerInfo_set(swigCPtr, SWIGTYPE_p_CExoLinkedListT_NWPLAYERLISTITEM_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lstPlayerInfo_get(swigCPtr);
      SWIGTYPE_p_CExoLinkedListT_NWPLAYERLISTITEM_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoLinkedListT_NWPLAYERLISTITEM_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoLinkedListT_CNWSPlayerTURD_t m_lstTURDList {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lstTURDList_set(swigCPtr, SWIGTYPE_p_CExoLinkedListT_CNWSPlayerTURD_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lstTURDList_get(swigCPtr);
      SWIGTYPE_p_CExoLinkedListT_CNWSPlayerTURD_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoLinkedListT_CNWSPlayerTURD_t(cPtr, false);
      return ret;
    } 
  }

  public CExoLocString m_lsModuleDescription {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lsModuleDescription_set(swigCPtr, CExoLocString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lsModuleDescription_get(swigCPtr);
      CExoLocString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoLocString(cPtr, false);
      return ret;
    } 
  }

  public CExoString m_sModuleAltTLKFile {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sModuleAltTLKFile_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_sModuleAltTLKFile_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public NWSyncAdvertisement m_nwsyncData {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nwsyncData_set(swigCPtr, NWSyncAdvertisement.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_nwsyncData_get(swigCPtr);
      NWSyncAdvertisement ret = (cPtr == global::System.IntPtr.Zero) ? null : new NWSyncAdvertisement(cPtr, false);
      return ret;
    } 
  }

  public int m_bNWSyncPublishHaks {
    set {
      NWNXLibPINVOKE.CNWSModule_m_bNWSyncPublishHaks_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_bNWSyncPublishHaks_get(swigCPtr);
      return ret;
    } 
  }

  public NWMODULEHEADER m_pModuleHeader {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pModuleHeader_set(swigCPtr, NWMODULEHEADER.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pModuleHeader_get(swigCPtr);
      NWMODULEHEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new NWMODULEHEADER(cPtr, false);
      return ret;
    } 
  }

  public NWMODULEENTRYINFO m_pModuleEntryInfo {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pModuleEntryInfo_set(swigCPtr, NWMODULEENTRYINFO.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pModuleEntryInfo_get(swigCPtr);
      NWMODULEENTRYINFO ret = (cPtr == global::System.IntPtr.Zero) ? null : new NWMODULEENTRYINFO(cPtr, false);
      return ret;
    } 
  }

  public CExoString m_sModuleResourceName {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sModuleResourceName_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_sModuleResourceName_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public int m_nSourceType {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nSourceType_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_nSourceType_get(swigCPtr);
      return ret;
    } 
  }

  public CExoString m_sDDResourceName {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sDDResourceName_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_sDDResourceName_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public int m_bIsDDModule {
    set {
      NWNXLibPINVOKE.CNWSModule_m_bIsDDModule_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_bIsDDModule_get(swigCPtr);
      return ret;
    } 
  }

  public int m_bIsDDDemoModule {
    set {
      NWNXLibPINVOKE.CNWSModule_m_bIsDDDemoModule_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_bIsDDDemoModule_get(swigCPtr);
      return ret;
    } 
  }

  public int m_bIsDDModuleLoaded {
    set {
      NWNXLibPINVOKE.CNWSModule_m_bIsDDModuleLoaded_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_bIsDDModuleLoaded_get(swigCPtr);
      return ret;
    } 
  }

  public CExoLocString m_lsModuleName {
    set {
      NWNXLibPINVOKE.CNWSModule_m_lsModuleName_set(swigCPtr, CExoLocString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_lsModuleName_get(swigCPtr);
      CExoLocString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoLocString(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoArrayListT_CExoString_t m_pHakFiles {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pHakFiles_set(swigCPtr, SWIGTYPE_p_CExoArrayListT_CExoString_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pHakFiles_get(swigCPtr);
      SWIGTYPE_p_CExoArrayListT_CExoString_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoArrayListT_CExoString_t(cPtr, false);
      return ret;
    } 
  }

  public CResRef m_cStartMovie {
    set {
      NWNXLibPINVOKE.CNWSModule_m_cStartMovie_set(swigCPtr, CResRef.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_cStartMovie_get(swigCPtr);
      CResRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new CResRef(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CNWSScriptVarTable m_ScriptVars {
    set {
      NWNXLibPINVOKE.CNWSModule_m_ScriptVars_set(swigCPtr, SWIGTYPE_p_CNWSScriptVarTable.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_ScriptVars_get(swigCPtr);
      SWIGTYPE_p_CNWSScriptVarTable ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CNWSScriptVarTable(cPtr, false);
      return ret;
    } 
  }

  public CExoString m_sScripts {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sScripts_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_sScripts_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public uint m_nLastHeartbeatScriptCalendarDay {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastHeartbeatScriptCalendarDay_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nLastHeartbeatScriptCalendarDay_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nLastHeartbeatScriptTimeOfDay {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastHeartbeatScriptTimeOfDay_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nLastHeartbeatScriptTimeOfDay_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoArrayListT_CNWSTagNode_t m_aTagLookupTable {
    set {
      NWNXLibPINVOKE.CNWSModule_m_aTagLookupTable_set(swigCPtr, SWIGTYPE_p_CExoArrayListT_CNWSTagNode_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_aTagLookupTable_get(swigCPtr);
      SWIGTYPE_p_CExoArrayListT_CNWSTagNode_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoArrayListT_CNWSTagNode_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoArrayListT_unsigned_int_t m_pInvisibleCreaturesList {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pInvisibleCreaturesList_set(swigCPtr, SWIGTYPE_p_CExoArrayListT_unsigned_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pInvisibleCreaturesList_get(swigCPtr);
      SWIGTYPE_p_CExoArrayListT_unsigned_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoArrayListT_unsigned_int_t(cPtr, false);
      return ret;
    } 
  }

  public int m_nCustomScriptEventId {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nCustomScriptEventId_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_nCustomScriptEventId_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastEnter {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastEnter_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastEnter_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastExit {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastExit_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastExit_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemAcquired {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemAcquired_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemAcquired_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemAcquiredFrom {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemAcquiredFrom_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemAcquiredFrom_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemAcquiredBy {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemAcquiredBy_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemAcquiredBy_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemLost {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemLost_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemLost_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemLoser {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemLoser_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemLoser_get(swigCPtr);
      return ret;
    } 
  }

  public int m_nLastItemAcquiredSize {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastItemAcquiredSize_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_nLastItemAcquiredSize_get(swigCPtr);
      return ret;
    } 
  }

  public int m_nLastItemLostSize {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastItemLostSize_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_nLastItemLostSize_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemEquipped {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemEquipped_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemEquipped_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemEquippedBy {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemEquippedBy_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemEquippedBy_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemUnequipped {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemUnequipped_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemUnequipped_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemUnequippedBy {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemUnequippedBy_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemUnequippedBy_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastRested {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastRested_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastRested_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nLastRestEventType {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastRestEventType_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nLastRestEventType_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastPlayerDied {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerDied_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerDied_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastPlayerDying {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerDying_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerDying_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastRespawnButtonPresser {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastRespawnButtonPresser_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastRespawnButtonPresser_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemActivated {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivated_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivated_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemActivator {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivator_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivator_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemActivatedArea {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivatedArea_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivatedArea_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastItemActivatedTarget {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivatedTarget_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastItemActivatedTarget_get(swigCPtr);
      return ret;
    } 
  }

  public Vector m_vLastItemActivatedPosition {
    set {
      NWNXLibPINVOKE.CNWSModule_m_vLastItemActivatedPosition_set(swigCPtr, Vector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_vLastItemActivatedPosition_get(swigCPtr);
      Vector ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector(cPtr, false);
      return ret;
    } 
  }

  public uint m_oidLastPCLevellingUp {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastPCLevellingUp_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastPCLevellingUp_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastPCCancelCutscene {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastPCCancelCutscene_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastPCCancelCutscene_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nMinutesPerHour {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nMinutesPerHour_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nMinutesPerHour_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nDawnHour {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nDawnHour_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nDawnHour_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nDuskHour {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nDuskHour_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nDuskHour_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nStartMonth {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nStartMonth_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nStartMonth_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nStartDay {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nStartDay_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nStartDay_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nStartHour {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nStartHour_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nStartHour_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nXPScale {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nXPScale_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nXPScale_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nCurrentYear {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nCurrentYear_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nCurrentYear_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nCurrentMonth {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nCurrentMonth_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nCurrentMonth_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nCurrentDay {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nCurrentDay_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nCurrentDay_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nCurrentHour {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nCurrentHour_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nCurrentHour_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nTimeIntoTransition {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nTimeIntoTransition_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nTimeIntoTransition_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nTimeOfDayState {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nTimeOfDayState_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nTimeOfDayState_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nLastUpdateCalendarDay {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastUpdateCalendarDay_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nLastUpdateCalendarDay_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_nLastUpdateTimeOfDay {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastUpdateTimeOfDay_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_nLastUpdateTimeOfDay_get(swigCPtr);
      return ret;
    } 
  }

  public int m_bIsSaveGame {
    set {
      NWNXLibPINVOKE.CNWSModule_m_bIsSaveGame_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_bIsSaveGame_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoArrayListT_CWorldJournalEntry_t m_pWorldJournal {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pWorldJournal_set(swigCPtr, SWIGTYPE_p_CExoArrayListT_CWorldJournalEntry_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pWorldJournal_get(swigCPtr);
      SWIGTYPE_p_CExoArrayListT_CWorldJournalEntry_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoArrayListT_CWorldJournalEntry_t(cPtr, false);
      return ret;
    } 
  }

  public int m_bModuleLoadFinished {
    set {
      NWNXLibPINVOKE.CNWSModule_m_bModuleLoadFinished_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_bModuleLoadFinished_get(swigCPtr);
      return ret;
    } 
  }

  public int m_nMaxHenchmen {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nMaxHenchmen_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_nMaxHenchmen_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoArrayListT_unsigned_int_t m_aGameObjectsLimbo {
    set {
      NWNXLibPINVOKE.CNWSModule_m_aGameObjectsLimbo_set(swigCPtr, SWIGTYPE_p_CExoArrayListT_unsigned_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_aGameObjectsLimbo_get(swigCPtr);
      SWIGTYPE_p_CExoArrayListT_unsigned_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoArrayListT_unsigned_int_t(cPtr, false);
      return ret;
    } 
  }

  public CERFFile m_pOutFile {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pOutFile_set(swigCPtr, CERFFile.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pOutFile_get(swigCPtr);
      CERFFile ret = (cPtr == global::System.IntPtr.Zero) ? null : new CERFFile(cPtr, false);
      return ret;
    } 
  }

  public CResStruct m_pStructIFO {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pStructIFO_set(swigCPtr, CResStruct.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pStructIFO_get(swigCPtr);
      CResStruct ret = (cPtr == global::System.IntPtr.Zero) ? null : new CResStruct(cPtr, false);
      return ret;
    } 
  }

  public CResGFF m_pResIFO {
    set {
      NWNXLibPINVOKE.CNWSModule_m_pResIFO_set(swigCPtr, CResGFF.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_pResIFO_get(swigCPtr);
      CResGFF ret = (cPtr == global::System.IntPtr.Zero) ? null : new CResGFF(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_CExoArrayListT_unsigned_int_t m_apPlayers {
    set {
      NWNXLibPINVOKE.CNWSModule_m_apPlayers_set(swigCPtr, SWIGTYPE_p_CExoArrayListT_unsigned_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_apPlayers_get(swigCPtr);
      SWIGTYPE_p_CExoArrayListT_unsigned_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_CExoArrayListT_unsigned_int_t(cPtr, false);
      return ret;
    } 
  }

  public CExoString m_sTag {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sTag_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_sTag_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public int m_bIsNWMFile {
    set {
      NWNXLibPINVOKE.CNWSModule_m_bIsNWMFile_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_bIsNWMFile_get(swigCPtr);
      return ret;
    } 
  }

  public CExoString m_sNWMResName {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sNWMResName_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_sNWMResName_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public int m_nResourceCount {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nResourceCount_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CNWSModule_m_nResourceCount_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nPlayerPathfindRule {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nPlayerPathfindRule_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nPlayerPathfindRule_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_nEnableScriptDebugger {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nEnableScriptDebugger_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nEnableScriptDebugger_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastPlayerChatObjectId {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerChatObjectId_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerChatObjectId_get(swigCPtr);
      return ret;
    } 
  }

  public CExoString m_sLastPlayerChatMessage {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sLastPlayerChatMessage_set(swigCPtr, CExoString.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_sLastPlayerChatMessage_get(swigCPtr);
      CExoString ret = (cPtr == global::System.IntPtr.Zero) ? null : new CExoString(cPtr, false);
      return ret;
    } 
  }

  public byte m_nLastPlayerChatType {
    set {
      NWNXLibPINVOKE.CNWSModule_m_nLastPlayerChatType_set(swigCPtr, value);
    } 
    get {
      byte ret = NWNXLibPINVOKE.CNWSModule_m_nLastPlayerChatType_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidLastPlayerToSelectTarget {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerToSelectTarget_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidLastPlayerToSelectTarget_get(swigCPtr);
      return ret;
    } 
  }

  public uint m_oidPlayerTargetObject {
    set {
      NWNXLibPINVOKE.CNWSModule_m_oidPlayerTargetObject_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CNWSModule_m_oidPlayerTargetObject_get(swigCPtr);
      return ret;
    } 
  }

  public Vector m_vPlayerTargetPosition {
    set {
      NWNXLibPINVOKE.CNWSModule_m_vPlayerTargetPosition_set(swigCPtr, Vector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_m_vPlayerTargetPosition_get(swigCPtr);
      Vector ret = (cPtr == global::System.IntPtr.Zero) ? null : new Vector(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__shared_ptrT_void_p_t m_sqlite3 {
    set {
      NWNXLibPINVOKE.CNWSModule_m_sqlite3_set(swigCPtr, SWIGTYPE_p_std__shared_ptrT_void_p_t.getCPtr(value));
      if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_std__shared_ptrT_void_p_t ret = new SWIGTYPE_p_std__shared_ptrT_void_p_t(NWNXLibPINVOKE.CNWSModule_m_sqlite3_get(swigCPtr), true);
      if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public CNWSModule(CExoString sModuleFilename, int bSetAutoRequest, int bIsSaveGame, int nSourceType) : this(NWNXLibPINVOKE.new_CNWSModule__SWIG_0(CExoString.getCPtr(sModuleFilename), bSetAutoRequest, bIsSaveGame, nSourceType), true) {
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNWSModule(CExoString sModuleFilename, int bSetAutoRequest, int bIsSaveGame) : this(NWNXLibPINVOKE.new_CNWSModule__SWIG_1(CExoString.getCPtr(sModuleFilename), bSetAutoRequest, bIsSaveGame), true) {
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CNWSModule(CExoString sModuleFilename, int bSetAutoRequest) : this(NWNXLibPINVOKE.new_CNWSModule__SWIG_2(CExoString.getCPtr(sModuleFilename), bSetAutoRequest), true) {
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public override CNWSModule AsNWSModule() {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_AsNWSModule(swigCPtr);
    CNWSModule ret = (cPtr == global::System.IntPtr.Zero) ? null : new CNWSModule(cPtr, false);
    return ret;
  }

  public void DoUpdate() {
    NWNXLibPINVOKE.CNWSModule_DoUpdate(swigCPtr);
  }

  public int AIUpdate() {
    int ret = NWNXLibPINVOKE.CNWSModule_AIUpdate(swigCPtr);
    return ret;
  }

  public int ComputeInterAreaPath(CPathfindInformation pcPathfindInformation) {
    int ret = NWNXLibPINVOKE.CNWSModule_ComputeInterAreaPath(swigCPtr, CPathfindInformation.getCPtr(pcPathfindInformation));
    return ret;
  }

  public void EventHandler(uint nEventId, uint nCallerObjectId, SWIGTYPE_p_void pScript, uint nCalendarDay, uint nTimeOfDay) {
    NWNXLibPINVOKE.CNWSModule_EventHandler(swigCPtr, nEventId, nCallerObjectId, SWIGTYPE_p_void.getCPtr(pScript), nCalendarDay, nTimeOfDay);
  }

  public uint GenerateInterAreaDFSSuccessors(int level, CPathfindInformation pcPathfindInformation, SWIGTYPE_p_p_unsigned_int pAreaSuccessors) {
    uint ret = NWNXLibPINVOKE.CNWSModule_GenerateInterAreaDFSSuccessors(swigCPtr, level, CPathfindInformation.getCPtr(pcPathfindInformation), SWIGTYPE_p_p_unsigned_int.getCPtr(pAreaSuccessors));
    return ret;
  }

  public CNWSArea GetArea(CResRef refArea) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_GetArea__SWIG_0(swigCPtr, CResRef.getCPtr(refArea));
    CNWSArea ret = (cPtr == global::System.IntPtr.Zero) ? null : new CNWSArea(cPtr, false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CNWSArea GetArea(uint oid) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_GetArea__SWIG_1(swigCPtr, oid);
    CNWSArea ret = (cPtr == global::System.IntPtr.Zero) ? null : new CNWSArea(cPtr, false);
    return ret;
  }

  public CNWSArea GetAreaByName(CExoString cAreaName) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_GetAreaByName(swigCPtr, CExoString.getCPtr(cAreaName));
    CNWSArea ret = (cPtr == global::System.IntPtr.Zero) ? null : new CNWSArea(cPtr, false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CNWSArea GetAreaByTag(CExoString sAreaTag) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_GetAreaByTag(swigCPtr, CExoString.getCPtr(sAreaTag));
    CNWSArea ret = (cPtr == global::System.IntPtr.Zero) ? null : new CNWSArea(cPtr, false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ClearAreaVisitedFlags() {
    NWNXLibPINVOKE.CNWSModule_ClearAreaVisitedFlags(swigCPtr);
  }

  public int InterAreaDFS(int level, int depth, CPathfindInformation pcPathfindInformation) {
    int ret = NWNXLibPINVOKE.CNWSModule_InterAreaDFS(swigCPtr, level, depth, CPathfindInformation.getCPtr(pcPathfindInformation));
    return ret;
  }

  public uint LoadModuleStart(CExoString sModuleName, int bIsSaveGame, int nSourceType) {
    uint ret = NWNXLibPINVOKE.CNWSModule_LoadModuleStart__SWIG_0(swigCPtr, CExoString.getCPtr(sModuleName), bIsSaveGame, nSourceType);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint LoadModuleStart(CExoString sModuleName, int bIsSaveGame) {
    uint ret = NWNXLibPINVOKE.CNWSModule_LoadModuleStart__SWIG_1(swigCPtr, CExoString.getCPtr(sModuleName), bIsSaveGame);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint LoadModuleStart(CExoString sModuleName) {
    uint ret = NWNXLibPINVOKE.CNWSModule_LoadModuleStart__SWIG_2(swigCPtr, CExoString.getCPtr(sModuleName));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint LoadModuleInProgress(int nAreasLoaded, int nAreasToLoad) {
    uint ret = NWNXLibPINVOKE.CNWSModule_LoadModuleInProgress(swigCPtr, nAreasLoaded, nAreasToLoad);
    return ret;
  }

  public uint LoadModuleFinish() {
    uint ret = NWNXLibPINVOKE.CNWSModule_LoadModuleFinish(swigCPtr);
    return ret;
  }

  public void PackModuleResourcesIntoMessage() {
    NWNXLibPINVOKE.CNWSModule_PackModuleResourcesIntoMessage(swigCPtr);
  }

  public void PackModuleIntoMessage(uint nPlayerId) {
    NWNXLibPINVOKE.CNWSModule_PackModuleIntoMessage(swigCPtr, nPlayerId);
  }

  public uint PlotPath(CPathfindInformation pcPathfindInformation, uint nTimeSlice) {
    uint ret = NWNXLibPINVOKE.CNWSModule_PlotPath(swigCPtr, CPathfindInformation.getCPtr(pcPathfindInformation), nTimeSlice);
    return ret;
  }

  public uint PlotInterAreaPath(CPathfindInformation pcPathfindInformation, uint nTimeSlice) {
    uint ret = NWNXLibPINVOKE.CNWSModule_PlotInterAreaPath(swigCPtr, CPathfindInformation.getCPtr(pcPathfindInformation), nTimeSlice);
    return ret;
  }

  public uint PlotPathInArea(CPathfindInformation pcPathfindInformation, uint nTimeSlice) {
    uint ret = NWNXLibPINVOKE.CNWSModule_PlotPathInArea(swigCPtr, CPathfindInformation.getCPtr(pcPathfindInformation), nTimeSlice);
    return ret;
  }

  public void SaveModuleStart(CExoString sFilePath, CExoString sFileName) {
    NWNXLibPINVOKE.CNWSModule_SaveModuleStart(swigCPtr, CExoString.getCPtr(sFilePath), CExoString.getCPtr(sFileName));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int SaveModuleInProgress() {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveModuleInProgress(swigCPtr);
    return ret;
  }

  public int SaveModuleFinish(CExoString sFilePath, CExoString sFileName) {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveModuleFinish(swigCPtr, CExoString.getCPtr(sFilePath), CExoString.getCPtr(sFileName));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint GetPlayerIndexInPlayerList(CNWSPlayer pPlayer) {
    uint ret = NWNXLibPINVOKE.CNWSModule_GetPlayerIndexInPlayerList(swigCPtr, CNWSPlayer.getCPtr(pPlayer));
    return ret;
  }

  public uint GetPrimaryPlayerIndex() {
    uint ret = NWNXLibPINVOKE.CNWSModule_GetPrimaryPlayerIndex(swigCPtr);
    return ret;
  }

  public void SetIntraAreaGoal(CPathfindInformation pcPathfindInformation) {
    NWNXLibPINVOKE.CNWSModule_SetIntraAreaGoal(swigCPtr, CPathfindInformation.getCPtr(pcPathfindInformation));
  }

  public void UnloadModule() {
    NWNXLibPINVOKE.CNWSModule_UnloadModule(swigCPtr);
  }

  public uint GetWaypoint(CExoString sTag) {
    uint ret = NWNXLibPINVOKE.CNWSModule_GetWaypoint(swigCPtr, CExoString.getCPtr(sTag));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int AddObjectToLookupTable(CExoString sTag, uint oidObject) {
    int ret = NWNXLibPINVOKE.CNWSModule_AddObjectToLookupTable(swigCPtr, CExoString.getCPtr(sTag), oidObject);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int RemoveObjectFromLookupTable(CExoString sTag, uint oidObject) {
    int ret = NWNXLibPINVOKE.CNWSModule_RemoveObjectFromLookupTable(swigCPtr, CExoString.getCPtr(sTag), oidObject);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint FindObjectByTagOrdinal(CExoString sTag, uint nNth) {
    uint ret = NWNXLibPINVOKE.CNWSModule_FindObjectByTagOrdinal__SWIG_0(swigCPtr, CExoString.getCPtr(sTag), nNth);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint FindObjectByTagOrdinal(CExoString sTag) {
    uint ret = NWNXLibPINVOKE.CNWSModule_FindObjectByTagOrdinal__SWIG_1(swigCPtr, CExoString.getCPtr(sTag));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint FindObjectByTagTypeOrdinal(CExoString sTag, int nObjectType, uint nNth) {
    uint ret = NWNXLibPINVOKE.CNWSModule_FindObjectByTagTypeOrdinal__SWIG_0(swigCPtr, CExoString.getCPtr(sTag), nObjectType, nNth);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint FindObjectByTagTypeOrdinal(CExoString sTag, int nObjectType) {
    uint ret = NWNXLibPINVOKE.CNWSModule_FindObjectByTagTypeOrdinal__SWIG_1(swigCPtr, CExoString.getCPtr(sTag), nObjectType);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void GetTime(SWIGTYPE_p_unsigned_int pYear, SWIGTYPE_p_unsigned_int pMonth, SWIGTYPE_p_unsigned_int pDay, SWIGTYPE_p_unsigned_int pHour, SWIGTYPE_p_unsigned_char pTimeOfDayState, SWIGTYPE_p_unsigned_int pTimeIntoTransition) {
    NWNXLibPINVOKE.CNWSModule_GetTime(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(pYear), SWIGTYPE_p_unsigned_int.getCPtr(pMonth), SWIGTYPE_p_unsigned_int.getCPtr(pDay), SWIGTYPE_p_unsigned_int.getCPtr(pHour), SWIGTYPE_p_unsigned_char.getCPtr(pTimeOfDayState), SWIGTYPE_p_unsigned_int.getCPtr(pTimeIntoTransition));
  }

  public void UpdateTime(uint nCalendarDay, uint nTimeOfDay, uint nUpdateDifference) {
    NWNXLibPINVOKE.CNWSModule_UpdateTime(swigCPtr, nCalendarDay, nTimeOfDay, nUpdateDifference);
  }

  public void AddWorldJournalEntry(int nIndex, CExoString szEntry, CExoString szTitle, uint nCalendarDay, uint nTimeOfDay) {
    NWNXLibPINVOKE.CNWSModule_AddWorldJournalEntry(swigCPtr, nIndex, CExoString.getCPtr(szEntry), CExoString.getCPtr(szTitle), nCalendarDay, nTimeOfDay);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddWorldJournalEntryStrref(uint strrefEntry, uint strrefTitle, uint nCalendarDay, uint nTimeOfDay) {
    NWNXLibPINVOKE.CNWSModule_AddWorldJournalEntryStrref(swigCPtr, strrefEntry, strrefTitle, nCalendarDay, nTimeOfDay);
  }

  public void DeleteWorldJournalEntry(int nIndex) {
    NWNXLibPINVOKE.CNWSModule_DeleteWorldJournalEntry(swigCPtr, nIndex);
  }

  public void DeleteWorldJournalEntryStrref(uint strref) {
    NWNXLibPINVOKE.CNWSModule_DeleteWorldJournalEntryStrref(swigCPtr, strref);
  }

  public void DeleteWorldJournalAllEntries() {
    NWNXLibPINVOKE.CNWSModule_DeleteWorldJournalAllEntries(swigCPtr);
  }

  public uint GetWorldJournalIndexUnique() {
    uint ret = NWNXLibPINVOKE.CNWSModule_GetWorldJournalIndexUnique(swigCPtr);
    return ret;
  }

  public void AddToTURDList(CNWSPlayerTURD pTURD) {
    NWNXLibPINVOKE.CNWSModule_AddToTURDList(swigCPtr, CNWSPlayerTURD.getCPtr(pTURD));
  }

  public void RemoveFromTURDList(CNWSPlayer pPlayer) {
    NWNXLibPINVOKE.CNWSModule_RemoveFromTURDList(swigCPtr, CNWSPlayer.getCPtr(pPlayer));
  }

  public void SaveTURDList(CResGFF pResIFO, CResStruct pStructIFO) {
    NWNXLibPINVOKE.CNWSModule_SaveTURDList(swigCPtr, CResGFF.getCPtr(pResIFO), CResStruct.getCPtr(pStructIFO));
  }

  public void LoadTURDList(CResGFF pResIFO, CResStruct pStructIFO) {
    NWNXLibPINVOKE.CNWSModule_LoadTURDList(swigCPtr, CResGFF.getCPtr(pResIFO), CResStruct.getCPtr(pStructIFO));
  }

  public void AddTURDsToWorld() {
    NWNXLibPINVOKE.CNWSModule_AddTURDsToWorld(swigCPtr);
  }

  public CNWSPlayerTURD GetPlayerTURDFromList(CNWSPlayer pPlayer) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_GetPlayerTURDFromList(swigCPtr, CNWSPlayer.getCPtr(pPlayer));
    CNWSPlayerTURD ret = (cPtr == global::System.IntPtr.Zero) ? null : new CNWSPlayerTURD(cPtr, false);
    return ret;
  }

  public void AddObjectToLimbo(uint id) {
    NWNXLibPINVOKE.CNWSModule_AddObjectToLimbo(swigCPtr, id);
  }

  public void RemoveObjectFromLimbo(uint id) {
    NWNXLibPINVOKE.CNWSModule_RemoveObjectFromLimbo(swigCPtr, id);
  }

  public int IsObjectInLimbo(uint id) {
    int ret = NWNXLibPINVOKE.CNWSModule_IsObjectInLimbo(swigCPtr, id);
    return ret;
  }

  public void CleanUpLimboList() {
    NWNXLibPINVOKE.CNWSModule_CleanUpLimboList(swigCPtr);
  }

  public byte IsOfficialCampaign() {
    byte ret = NWNXLibPINVOKE.CNWSModule_IsOfficialCampaign(swigCPtr);
    return ret;
  }

  public void DestroyModuleSqliteDatabase() {
    NWNXLibPINVOKE.CNWSModule_DestroyModuleSqliteDatabase(swigCPtr);
  }

  public void PostProcess() {
    NWNXLibPINVOKE.CNWSModule_PostProcess(swigCPtr);
  }

  public int SaveModuleIFOStart(CResGFF pRes, CResStruct pTopLevelStruct) {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveModuleIFOStart(swigCPtr, CResGFF.getCPtr(pRes), CResStruct.getCPtr(pTopLevelStruct));
    return ret;
  }

  public int SaveModuleIFOFinish(CResGFF pRes, CResStruct pTopLevelStruct, CERFFile cSaveFile, CExoString sPath, SWIGTYPE_p_CExoArrayListT_unsigned_int_t aPlayers) {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveModuleIFOFinish(swigCPtr, CResGFF.getCPtr(pRes), CResStruct.getCPtr(pTopLevelStruct), CERFFile.getCPtr(cSaveFile), CExoString.getCPtr(sPath), SWIGTYPE_p_CExoArrayListT_unsigned_int_t.getCPtr(aPlayers));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SaveLimboCreatures(CResGFF pRes, CResStruct pTopLevelStruct) {
    NWNXLibPINVOKE.CNWSModule_SaveLimboCreatures(swigCPtr, CResGFF.getCPtr(pRes), CResStruct.getCPtr(pTopLevelStruct));
  }

  public int LoadLimboCreatures(CResGFF pRes, CResStruct pStruct, int bLoadStateInfo) {
    int ret = NWNXLibPINVOKE.CNWSModule_LoadLimboCreatures(swigCPtr, CResGFF.getCPtr(pRes), CResStruct.getCPtr(pStruct), bLoadStateInfo);
    return ret;
  }

  public int SaveSqliteDatabase(CERFFile cSaveFile) {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveSqliteDatabase(swigCPtr, CERFFile.getCPtr(cSaveFile));
    return ret;
  }

  public int LoadSqliteDatabase() {
    int ret = NWNXLibPINVOKE.CNWSModule_LoadSqliteDatabase(swigCPtr);
    return ret;
  }

  public int SaveModuleFAC(CERFFile cSaveFile) {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveModuleFAC(swigCPtr, CERFFile.getCPtr(cSaveFile));
    return ret;
  }

  public int SaveStatic(CERFFile cSaveFile, CExoString sFileType, ushort nResType, int bIsGFF) {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveStatic__SWIG_0(swigCPtr, CERFFile.getCPtr(cSaveFile), CExoString.getCPtr(sFileType), nResType, bIsGFF);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SaveStatic(CERFFile cSaveFile, CExoString sFileType, ushort nResType) {
    int ret = NWNXLibPINVOKE.CNWSModule_SaveStatic__SWIG_1(swigCPtr, CERFFile.getCPtr(cSaveFile), CExoString.getCPtr(sFileType), nResType);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int SavePlayers(CResGFF pResIFO, CResStruct pStructIFO, CExoString sPath, SWIGTYPE_p_CExoArrayListT_unsigned_int_t aPlayers) {
    int ret = NWNXLibPINVOKE.CNWSModule_SavePlayers(swigCPtr, CResGFF.getCPtr(pResIFO), CResStruct.getCPtr(pStructIFO), CExoString.getCPtr(sPath), SWIGTYPE_p_CExoArrayListT_unsigned_int_t.getCPtr(aPlayers));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void TimeStopSanityCheck() {
    NWNXLibPINVOKE.CNWSModule_TimeStopSanityCheck(swigCPtr);
  }

  public SWIGTYPE_p_unsigned_char GetFullCipher(CExoString sModuleResourceName) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWSModule_GetFullCipher(swigCPtr, CExoString.getCPtr(sModuleResourceName));
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int FindTagPositionInTable(string szTag) {
    int ret = NWNXLibPINVOKE.CNWSModule_FindTagPositionInTable(swigCPtr, szTag);
    return ret;
  }

}

}
