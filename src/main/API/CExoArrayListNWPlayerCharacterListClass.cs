//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public unsafe class CExoArrayListNWPlayerCharacterListClass : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CExoArrayListNWPlayerCharacterListClass(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CExoArrayListNWPlayerCharacterListClass obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CExoArrayListNWPlayerCharacterListClass() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CExoArrayListNWPlayerCharacterListClass(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }
/*@SWIG:/__w/NWN.Native/NWN.Native/nwnx/Plugins/SWIG/SWIG_DotNET/API_NWNXLib.i,25,SWIG_DOTNET_EXTENSIONS@*/
  public global::System.IntPtr Pointer {
    get {
      return swigCPtr.Handle;
    }
  }

  public static unsafe implicit operator void*(CExoArrayListNWPlayerCharacterListClass self) {
    return (void*)self.swigCPtr.Handle;
  }

  public static unsafe CExoArrayListNWPlayerCharacterListClass FromPointer(void* pointer, bool memoryOwn = false) {
    return pointer != null ? new CExoArrayListNWPlayerCharacterListClass((global::System.IntPtr)pointer, memoryOwn) : null;
  }

  public static CExoArrayListNWPlayerCharacterListClass FromPointer(global::System.IntPtr pointer, bool memoryOwn = false) {
    return pointer != global::System.IntPtr.Zero ? new CExoArrayListNWPlayerCharacterListClass(pointer, memoryOwn) : null;
  }

  public bool Equals(CExoArrayListNWPlayerCharacterListClass other) {
    if (ReferenceEquals(null, other)) {
      return false;
    }

    if (ReferenceEquals(this, other)) {
      return true;
    }

    return Pointer.Equals(other.Pointer);
  }

  public override bool Equals(object obj) {
    return ReferenceEquals(this, obj) || obj is CExoArrayListNWPlayerCharacterListClass other && Equals(other);
  }

  public override int GetHashCode() {
    return swigCPtr.Handle.GetHashCode();
  }

  public static bool operator ==(CExoArrayListNWPlayerCharacterListClass left, CExoArrayListNWPlayerCharacterListClass right) {
    return Equals(left, right);
  }

  public static bool operator !=(CExoArrayListNWPlayerCharacterListClass left, CExoArrayListNWPlayerCharacterListClass right) {
    return !Equals(left, right);
  }
/*@SWIG@*/
  public NWPlayerCharacterListClass_st element {
    set {
      NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_element_set(swigCPtr, NWPlayerCharacterListClass_st.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_element_get(swigCPtr);
      NWPlayerCharacterListClass_st ret = (cPtr == global::System.IntPtr.Zero) ? null : new NWPlayerCharacterListClass_st(cPtr, false);
      return ret;
    } 
  }

  public int num {
    set {
      NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_num_set(swigCPtr, value);
    } 
    get {
      int retVal = NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_num_get(swigCPtr);
      return retVal;
    }

  }

  public int array_size {
    set {
      NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_array_size_set(swigCPtr, value);
    } 
    get {
      int retVal = NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_array_size_get(swigCPtr);
      return retVal;
    }

  }

  public CExoArrayListNWPlayerCharacterListClass(int s) : this(NWNXLibPINVOKE.new_CExoArrayListNWPlayerCharacterListClass__SWIG_0(s), true) {
  }

  public CExoArrayListNWPlayerCharacterListClass() : this(NWNXLibPINVOKE.new_CExoArrayListNWPlayerCharacterListClass__SWIG_1(), true) {
  }

  public CExoArrayListNWPlayerCharacterListClass(CExoArrayListNWPlayerCharacterListClass list) : this(NWNXLibPINVOKE.new_CExoArrayListNWPlayerCharacterListClass__SWIG_2(CExoArrayListNWPlayerCharacterListClass.getCPtr(list)), true) {
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CExoArrayListNWPlayerCharacterListClass _OpAssign(CExoArrayListNWPlayerCharacterListClass list) {
    CExoArrayListNWPlayerCharacterListClass ret = new CExoArrayListNWPlayerCharacterListClass(NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass__OpAssign(swigCPtr, CExoArrayListNWPlayerCharacterListClass.getCPtr(list)), false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NWPlayerCharacterListClass_st _OpIndex(int i) {
    NWPlayerCharacterListClass_st ret = new NWPlayerCharacterListClass_st(NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass__OpIndex(swigCPtr, i), false);
    return ret;
  }

  public void Allocate(int s) {
    NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_Allocate(swigCPtr, s);
  }

  public void SetSize(int s) {
    NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_SetSize(swigCPtr, s);
  }

  public void Pack() {
    NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_Pack(swigCPtr);
  }

  public void Add(NWPlayerCharacterListClass_st t) {
    NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_Add(swigCPtr, NWPlayerCharacterListClass_st.getCPtr(t));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Insert(NWPlayerCharacterListClass_st t, int k) {
    NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_Insert(swigCPtr, NWPlayerCharacterListClass_st.getCPtr(t), k);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void DelIndex(int i) {
    NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_DelIndex(swigCPtr, i);
  }

  public NWPlayerCharacterListClass_st begin() {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_begin(swigCPtr);
    NWPlayerCharacterListClass_st ret = (cPtr == global::System.IntPtr.Zero) ? null : new NWPlayerCharacterListClass_st(cPtr, false);
    return ret;
  }

  public NWPlayerCharacterListClass_st end() {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CExoArrayListNWPlayerCharacterListClass_end(swigCPtr);
    NWPlayerCharacterListClass_st ret = (cPtr == global::System.IntPtr.Zero) ? null : new NWPlayerCharacterListClass_st(cPtr, false);
    return ret;
  }

}

}
