//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public unsafe class CExoArrayListSJournalEntry : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CExoArrayListSJournalEntry(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CExoArrayListSJournalEntry obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CExoArrayListSJournalEntry() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CExoArrayListSJournalEntry(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }
/*@SWIG:/__w/NWN.Native/NWN.Native/nwnx/Plugins/SWIG/SWIG_DotNET/API_NWNXLib.i,20,SWIG_DOTNET_EXTENSIONS@*/
  public global::System.IntPtr Pointer {
    get {
      return swigCPtr.Handle;
    }
  }

  public static unsafe implicit operator void*(CExoArrayListSJournalEntry self) {
    return (void*)self.swigCPtr.Handle;
  }

  public static unsafe CExoArrayListSJournalEntry FromPointer(void* pointer, bool memoryOwn = false) {
    return pointer != null ? new CExoArrayListSJournalEntry((global::System.IntPtr)pointer, memoryOwn) : null;
  }

  public static CExoArrayListSJournalEntry FromPointer(global::System.IntPtr pointer, bool memoryOwn = false) {
    return pointer != global::System.IntPtr.Zero ? new CExoArrayListSJournalEntry(pointer, memoryOwn) : null;
  }

  public bool Equals(CExoArrayListSJournalEntry other) {
    if (ReferenceEquals(null, other)) {
      return false;
    }

    if (ReferenceEquals(this, other)) {
      return true;
    }

    return Pointer.Equals(other.Pointer);
  }

  public override bool Equals(object obj) {
    return ReferenceEquals(this, obj) || obj is CExoArrayListSJournalEntry other && Equals(other);
  }

  public override int GetHashCode() {
    return swigCPtr.Handle.GetHashCode();
  }

  public static bool operator ==(CExoArrayListSJournalEntry left, CExoArrayListSJournalEntry right) {
    return Equals(left, right);
  }

  public static bool operator !=(CExoArrayListSJournalEntry left, CExoArrayListSJournalEntry right) {
    return !Equals(left, right);
  }
/*@SWIG@*/
  public SJournalEntry element {
    set {
      NWNXLibPINVOKE.CExoArrayListSJournalEntry_element_set(swigCPtr, SJournalEntry.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CExoArrayListSJournalEntry_element_get(swigCPtr);
      SJournalEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new SJournalEntry(cPtr, false);
      return ret;
    } 
  }

  public int num {
    set {
      NWNXLibPINVOKE.CExoArrayListSJournalEntry_num_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CExoArrayListSJournalEntry_num_get(swigCPtr);
      return ret;
    } 
  }

  public int array_size {
    set {
      NWNXLibPINVOKE.CExoArrayListSJournalEntry_array_size_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CExoArrayListSJournalEntry_array_size_get(swigCPtr);
      return ret;
    } 
  }

  public CExoArrayListSJournalEntry(int s) : this(NWNXLibPINVOKE.new_CExoArrayListSJournalEntry__SWIG_0(s), true) {
  }

  public CExoArrayListSJournalEntry() : this(NWNXLibPINVOKE.new_CExoArrayListSJournalEntry__SWIG_1(), true) {
  }

  public CExoArrayListSJournalEntry(CExoArrayListSJournalEntry list) : this(NWNXLibPINVOKE.new_CExoArrayListSJournalEntry__SWIG_2(CExoArrayListSJournalEntry.getCPtr(list)), true) {
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CExoArrayListSJournalEntry _OpAssign(CExoArrayListSJournalEntry list) {
    CExoArrayListSJournalEntry ret = new CExoArrayListSJournalEntry(NWNXLibPINVOKE.CExoArrayListSJournalEntry__OpAssign(swigCPtr, CExoArrayListSJournalEntry.getCPtr(list)), false);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SJournalEntry _OpIndex(int i) {
    SJournalEntry ret = new SJournalEntry(NWNXLibPINVOKE.CExoArrayListSJournalEntry__OpIndex(swigCPtr, i), false);
    return ret;
  }

  public void Allocate(int s) {
    NWNXLibPINVOKE.CExoArrayListSJournalEntry_Allocate(swigCPtr, s);
  }

  public void SetSize(int s) {
    NWNXLibPINVOKE.CExoArrayListSJournalEntry_SetSize(swigCPtr, s);
  }

  public void Pack() {
    NWNXLibPINVOKE.CExoArrayListSJournalEntry_Pack(swigCPtr);
  }

  public void Add(SJournalEntry t) {
    NWNXLibPINVOKE.CExoArrayListSJournalEntry_Add(swigCPtr, SJournalEntry.getCPtr(t));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Insert(SJournalEntry t, int k) {
    NWNXLibPINVOKE.CExoArrayListSJournalEntry_Insert(swigCPtr, SJournalEntry.getCPtr(t), k);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void DelIndex(int i) {
    NWNXLibPINVOKE.CExoArrayListSJournalEntry_DelIndex(swigCPtr, i);
  }

  public SJournalEntry begin() {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CExoArrayListSJournalEntry_begin(swigCPtr);
    SJournalEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new SJournalEntry(cPtr, false);
    return ret;
  }

  public SJournalEntry end() {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CExoArrayListSJournalEntry_end(swigCPtr);
    SJournalEntry ret = (cPtr == global::System.IntPtr.Zero) ? null : new SJournalEntry(cPtr, false);
    return ret;
  }

}

}
