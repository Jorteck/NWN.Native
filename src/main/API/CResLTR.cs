//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public class CResLTR : CRes {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CResLTR(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NWNXLibPINVOKE.CResLTR_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CResLTR obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CResLTR(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public SWIGTYPE_p_p_p_float m_pStartTripleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pStartTripleLetterProb_set(swigCPtr, SWIGTYPE_p_p_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pStartTripleLetterProb_get(swigCPtr);
      SWIGTYPE_p_p_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_p_float m_pMiddleTripleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pMiddleTripleLetterProb_set(swigCPtr, SWIGTYPE_p_p_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pMiddleTripleLetterProb_get(swigCPtr);
      SWIGTYPE_p_p_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_p_float m_pEndTripleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pEndTripleLetterProb_set(swigCPtr, SWIGTYPE_p_p_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pEndTripleLetterProb_get(swigCPtr);
      SWIGTYPE_p_p_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_float m_pStartDoubleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pStartDoubleLetterProb_set(swigCPtr, SWIGTYPE_p_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pStartDoubleLetterProb_get(swigCPtr);
      SWIGTYPE_p_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_float m_pMiddleDoubleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pMiddleDoubleLetterProb_set(swigCPtr, SWIGTYPE_p_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pMiddleDoubleLetterProb_get(swigCPtr);
      SWIGTYPE_p_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_float m_pEndDoubleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pEndDoubleLetterProb_set(swigCPtr, SWIGTYPE_p_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pEndDoubleLetterProb_get(swigCPtr);
      SWIGTYPE_p_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_pStartSingleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pStartSingleLetterProb_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pStartSingleLetterProb_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_pMiddleSingleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pMiddleSingleLetterProb_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pMiddleSingleLetterProb_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_float m_pEndSingleLetterProb {
    set {
      NWNXLibPINVOKE.CResLTR_m_pEndSingleLetterProb_set(swigCPtr, SWIGTYPE_p_float.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pEndSingleLetterProb_get(swigCPtr);
      SWIGTYPE_p_float ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_float(cPtr, false);
      return ret;
    } 
  }

  public EXOLTRHEADER m_pLTRHeader {
    set {
      NWNXLibPINVOKE.CResLTR_m_pLTRHeader_set(swigCPtr, EXOLTRHEADER.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pLTRHeader_get(swigCPtr);
      EXOLTRHEADER ret = (cPtr == global::System.IntPtr.Zero) ? null : new EXOLTRHEADER(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char m_pLTRData {
    set {
      NWNXLibPINVOKE.CResLTR_m_pLTRData_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CResLTR_m_pLTRData_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public uint m_nLTRNormalSize {
    set {
      NWNXLibPINVOKE.CResLTR_m_nLTRNormalSize_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.CResLTR_m_nLTRNormalSize_get(swigCPtr);
      return ret;
    } 
  }

  public int m_bLoaded {
    set {
      NWNXLibPINVOKE.CResLTR_m_bLoaded_set(swigCPtr, value);
    } 
    get {
      int ret = NWNXLibPINVOKE.CResLTR_m_bLoaded_get(swigCPtr);
      return ret;
    } 
  }

  public CResLTR() : this(NWNXLibPINVOKE.new_CResLTR(), true) {
  }

  public override int OnResourceFreed() {
    int ret = NWNXLibPINVOKE.CResLTR_OnResourceFreed(swigCPtr);
    return ret;
  }

  public override int OnResourceServiced() {
    int ret = NWNXLibPINVOKE.CResLTR_OnResourceServiced(swigCPtr);
    return ret;
  }

}

}
