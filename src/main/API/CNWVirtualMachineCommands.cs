//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public class CNWVirtualMachineCommands : CVirtualMachineCmdImplementer {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CNWVirtualMachineCommands(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NWNXLibPINVOKE.CNWVirtualMachineCommands_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CNWVirtualMachineCommands obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NWNXLibPINVOKE.delete_CNWVirtualMachineCommands(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public SWIGTYPE_p_p_f_int_int__int m_pVirtualMachineCommands {
    set {
      NWNXLibPINVOKE.CNWVirtualMachineCommands_m_pVirtualMachineCommands_set(swigCPtr, SWIGTYPE_p_p_f_int_int__int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWVirtualMachineCommands_m_pVirtualMachineCommands_get(swigCPtr);
      SWIGTYPE_p_p_f_int_int__int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_f_int_int__int(cPtr, false);
      return ret;
    } 
  }

  public override void InitializeCommands() {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_InitializeCommands(swigCPtr);
  }

  public override int ExecuteCommand(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommand(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public override void ReportError(CExoString sFileName, int nError) {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_ReportError(swigCPtr, CExoString.getCPtr(sFileName), nError);
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void RunScriptCallback(CExoString sFileName) {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_RunScriptCallback(swigCPtr, CExoString.getCPtr(sFileName));
    if (NWNXLibPINVOKE.SWIGPendingException.Pending) throw NWNXLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public override SWIGTYPE_p_void CopyGameDefinedStructure(int nEngineStructure, SWIGTYPE_p_void pStructureSrc) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWVirtualMachineCommands_CopyGameDefinedStructure(swigCPtr, nEngineStructure, SWIGTYPE_p_void.getCPtr(pStructureSrc));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public override int GetEqualGameDefinedStructure(int nEngineStructure, SWIGTYPE_p_void pStructure1, SWIGTYPE_p_void pStructure2) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_GetEqualGameDefinedStructure(swigCPtr, nEngineStructure, SWIGTYPE_p_void.getCPtr(pStructure1), SWIGTYPE_p_void.getCPtr(pStructure2));
    return ret;
  }

  public override void DestroyGameDefinedStructure(int nEngineStructure, SWIGTYPE_p_void pStructureToDelete) {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_DestroyGameDefinedStructure(swigCPtr, nEngineStructure, SWIGTYPE_p_void.getCPtr(pStructureToDelete));
  }

  public override SWIGTYPE_p_void CreateGameDefinedStructure(int nEngineStructure) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWVirtualMachineCommands_CreateGameDefinedStructure(swigCPtr, nEngineStructure);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public override CExoString GetGameDefinedStructureName(int nEngineStructure) {
    CExoString ret = new CExoString(NWNXLibPINVOKE.CNWVirtualMachineCommands_GetGameDefinedStructureName(swigCPtr, nEngineStructure), true);
    return ret;
  }

  public override CExoString GetDebuggerLabelName(int nDebuggerLabel) {
    CExoString ret = new CExoString(NWNXLibPINVOKE.CNWVirtualMachineCommands_GetDebuggerLabelName(swigCPtr, nDebuggerLabel), true);
    return ret;
  }

  public override int SaveGameDefinedStructure(int nEngineStructure, SWIGTYPE_p_void pStructure, CResGFF pRes, CResStruct pStruct) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_SaveGameDefinedStructure(swigCPtr, nEngineStructure, SWIGTYPE_p_void.getCPtr(pStructure), CResGFF.getCPtr(pRes), CResStruct.getCPtr(pStruct));
    return ret;
  }

  public override int LoadGameDefinedStructure(int nEngineStructure, SWIGTYPE_p_p_void pStructure, CResGFF pRes, CResStruct pStruct) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_LoadGameDefinedStructure(swigCPtr, nEngineStructure, SWIGTYPE_p_p_void.getCPtr(pStructure), CResGFF.getCPtr(pRes), CResStruct.getCPtr(pStruct));
    return ret;
  }

  public override void GetEngineStructureWatchView(int nEngineStructure, SWIGTYPE_p_void pEngineStructure, SWIGTYPE_p_int nEntries, SWIGTYPE_p_p_CExoString m_ppNames, SWIGTYPE_p_p_CExoString m_ppValues) {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_GetEngineStructureWatchView(swigCPtr, nEngineStructure, SWIGTYPE_p_void.getCPtr(pEngineStructure), SWIGTYPE_p_int.getCPtr(nEntries), SWIGTYPE_p_p_CExoString.getCPtr(m_ppNames), SWIGTYPE_p_p_CExoString.getCPtr(m_ppValues));
  }

  public override void GetObjectWatchView(uint oidObject, SWIGTYPE_p_int nEntries, SWIGTYPE_p_p_CExoString m_ppNames, SWIGTYPE_p_p_CExoString m_ppValues) {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_GetObjectWatchView(swigCPtr, oidObject, SWIGTYPE_p_int.getCPtr(nEntries), SWIGTYPE_p_p_CExoString.getCPtr(m_ppNames), SWIGTYPE_p_p_CExoString.getCPtr(m_ppValues));
  }

  public override int DebugGUIStart() {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_DebugGUIStart(swigCPtr);
    return ret;
  }

  public override void DebugGUIStop() {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_DebugGUIStop(swigCPtr);
  }

  public override void DebugGUISendMessageTo(string pMsg, int nSize) {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_DebugGUISendMessageTo(swigCPtr, pMsg, nSize);
  }

  public override int DebugGUIGetMessageFrom(SWIGTYPE_p_p_char pMsg, SWIGTYPE_p_int nSize) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_DebugGUIGetMessageFrom(swigCPtr, SWIGTYPE_p_p_char.getCPtr(pMsg), SWIGTYPE_p_int.getCPtr(nSize));
    return ret;
  }

  public override void DebugGUIUpdate() {
    NWNXLibPINVOKE.CNWVirtualMachineCommands_DebugGUIUpdate(swigCPtr);
  }

  public C2DA GetTableFromArmorPart(int iPart) {
    global::System.IntPtr cPtr = NWNXLibPINVOKE.CNWVirtualMachineCommands_GetTableFromArmorPart(swigCPtr, iPart);
    C2DA ret = (cPtr == global::System.IntPtr.Zero) ? null : new C2DA(cPtr, false);
    return ret;
  }

  public int ExecuteCommandActionCounterSpell(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionCounterSpell(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionDoCommand(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionDoCommand(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionEquipMostDamagingMelee(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionEquipMostDamagingMelee(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionEquipMostDamagingRanged(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionEquipMostDamagingRanged(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionEquipMostEffectiveArmor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionEquipMostEffectiveArmor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionExamine(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionExamine(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionExchangeItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionExchangeItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionFollowObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionFollowObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionInteractObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionInteractObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionJumpToObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionJumpToObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionJumpToPoint(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionJumpToPoint(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionLockActions(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionLockActions(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionMoveAwayFromLocation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionMoveAwayFromLocation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionPauseConversation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionPauseConversation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionRandomWalk(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionRandomWalk(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionRest(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionRest(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionResumeConversation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionResumeConversation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionStartConversation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionStartConversation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionSit(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionSit(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionUseFeat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionUseFeat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionUseItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionUseItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionUseSkill(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionUseSkill(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActionUseTalent(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActionUseTalent(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandActivatePortal(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandActivatePortal(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAddItemProperty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAddItemProperty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAddJournalQuestEntry(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAddJournalQuestEntry(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAddToParty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAddToParty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAdjustAlignment(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAdjustAlignment(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAdjustReputation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAdjustReputation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAmbientSound(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAmbientSound(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandApplyEffectAtPoint(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandApplyEffectAtPoint(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandApplyEffectOnObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandApplyEffectOnObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAreaManagement(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAreaManagement(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAssignCommand(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAssignCommand(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAssociateAccess(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAssociateAccess(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAttack(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAttack(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandAutoMapExplorationManagement(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandAutoMapExplorationManagement(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandBeginConversation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandBeginConversation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandBlackScreen(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandBlackScreen(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandBootPC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandBootPC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCastSpell(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCastSpell(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandChangeFaction(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandChangeFaction(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandClearAllActions(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandClearAllActions(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetActionMode(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetActionMode(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetActionMode(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetActionMode(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCloseDoor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCloseDoor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCopyItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCopyItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCopyItemAndModify(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCopyItemAndModify(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemAppearance(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemAppearance(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCopyObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCopyObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCreateItemOnObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCreateItemOnObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCreateObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCreateObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCreateTrapAtLocation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCreateTrapAtLocation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandCreateTrapOnObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandCreateTrapOnObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDayNightCycle(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDayNightCycle(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDecrementFeatUses(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDecrementFeatUses(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDecrementSpellUses(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDecrementSpellUses(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDelayCommand(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDelayCommand(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDeleteVar(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDeleteVar(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDeleteCampaignVariable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDeleteCampaignVariable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDestroyCampaignDatabase(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDestroyCampaignDatabase(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDestroyObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDestroyObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDistanceConversions(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDistanceConversions(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDoDoorAction(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDoDoorAction(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDoSinglePlayerAutoSave(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDoSinglePlayerAutoSave(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDoTouchAttack(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDoTouchAttack(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandDoWhirlwindAttack(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandDoWhirlwindAttack(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectAbilityDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectAbilityDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectAbilityIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectAbilityIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectACDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectACDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectACIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectACIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectAppear(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectAppear(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectAreaEffect(int nCommandId, int nParemeters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectAreaEffect(swigCPtr, nCommandId, nParemeters);
    return ret;
  }

  public int ExecuteCommandEffectAttackDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectAttackDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectAttackIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectAttackIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectBeam(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectBeam(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectBlindness(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectBlindness(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectComplex(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectComplex(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectConcealment(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectConcealment(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectCutsceneGhost(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectCutsceneGhost(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamage(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamage(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamageDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamageDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamageImmunityDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamageImmunityDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamageImmunityIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamageImmunityIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamageIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamageIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamageResistance(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamageResistance(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamageReduction(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamageReduction(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDamageShield(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDamageShield(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDarkness(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDarkness(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDisease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDisease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDisappear(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDisappear(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectDisappearAppear(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectDisappearAppear(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectEthereal(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectEthereal(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectHeal(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectHeal(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectHitPointChangeWhenDying(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectHitPointChangeWhenDying(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectImmunity(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectImmunity(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectInvisibility(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectInvisibility(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectLinkEffects(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectLinkEffects(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectMissChance(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectMissChance(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectModifyAttacks(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectModifyAttacks(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectMovementSpeedDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectMovementSpeedDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectMovementSpeedIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectMovementSpeedIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectNegativeLevel(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectNegativeLevel(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectPetrify(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectPetrify(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectPoison(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectPoison(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectResurrection(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectResurrection(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSanctuary(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSanctuary(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSavingThrowDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSavingThrowDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSavingThrowIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSavingThrowIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSeeInvisible(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSeeInvisible(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSkillDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSkillDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSkillIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSkillIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSpellFailure(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSpellFailure(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSpellImmunity(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSpellImmunity(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSpellLevelAbsorption(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSpellLevelAbsorption(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSpellResistanceDecrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSpellResistanceDecrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSpellResistanceIncrease(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSpellResistanceIncrease(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSummonCreature(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSummonCreature(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectSwarm(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectSwarm(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectTemporaryHP(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectTemporaryHP(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectTrueSeeing(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectTrueSeeing(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectTurnResistance(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectTurnResistance(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectUltravision(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectUltravision(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEffectVisualEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEffectVisualEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEndGame(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEndGame(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEquipItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEquipItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEventActivateItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEventActivateItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEventConversation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEventConversation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEventUserDefined(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEventUserDefined(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEventScriptManagement(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEventScriptManagement(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandEventSpellCastAt(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandEventSpellCastAt(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandExecuteScript(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandExecuteScript(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandExecuteScriptChunk(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandExecuteScriptChunk(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandExploreAreaForPlayer(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandExploreAreaForPlayer(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandExportAllCharacters(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandExportAllCharacters(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandExportSingleCharacter(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandExportSingleCharacter(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandFindSubString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandFindSubString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandFloatingText(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandFloatingText(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandFloatToInt(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandFloatToInt(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandFloatToString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandFloatToString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandForceRest(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandForceRest(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGet2DAString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGet2DAString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAbilityScore(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAbilityScore(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAbilityModifier(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAbilityModifier(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAge(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAge(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAILevel(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAILevel(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAlignment(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAlignment(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAnimalCompanionCreatureType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAnimalCompanionCreatureType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAnimalCompanionName(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAnimalCompanionName(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAOEObjectCreator(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAOEObjectCreator(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAppearanceType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAppearanceType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetArcaneSpellFailure(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetArcaneSpellFailure(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetArea(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetArea(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAreaSize(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAreaSize(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAssociate(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAssociate(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAssociateType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAssociateType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAttackTarget(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAttackTarget(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAttemptedAttackTarget(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAttemptedAttackTarget(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetAttemptedSpellTarget(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetAttemptedSpellTarget(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetBaseAttackBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetBaseAttackBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetBaseItemType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetBaseItemType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetBattleTrack(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetBattleTrack(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetBlockingDoor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetBlockingDoor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCalendarYear(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCalendarYear(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCalendarMonth(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCalendarMonth(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCalendarDay(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCalendarDay(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCampaignFloat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCampaignFloat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCampaignInt(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCampaignInt(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCampaignVector(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCampaignVector(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCampaignLocation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCampaignLocation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCampaignString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCampaignString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCasterLevel(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCasterLevel(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetChallengeRating(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetChallengeRating(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetClassInformation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetClassInformation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetColor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetColor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCommandable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCommandable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCreatureBodyPart(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCreatureBodyPart(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCreatureHasTalent(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCreatureHasTalent(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCreatureTailType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCreatureTailType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCreatureTalent(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCreatureTalent(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCreatureSize(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCreatureSize(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCreatureWingType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCreatureWingType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCurrentAction(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCurrentAction(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCutsceneCameraMoveRate(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCutsceneCameraMoveRate(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetCutsceneMode(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetCutsceneMode(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDamageDealtByType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDamageDealtByType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDayTrack(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDayTrack(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDeity(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDeity(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDescription(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDescription(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDialogSoundLength(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDialogSoundLength(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDistanceBetween(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDistanceBetween(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDistanceBetweenLocations(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDistanceBetweenLocations(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDistanceToObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDistanceToObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDomain(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDomain(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetDroppableFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetDroppableFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectCasterLevel(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectCasterLevel(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectCreator(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectCreator(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectDuration(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectDuration(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectDurationRemaining(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectDurationRemaining(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectDurationType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectDurationType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectSpellId(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectSpellId(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectSubType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectSubType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectTag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectTag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEffectType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEffectType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEmotions(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEmotions(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEncounterData(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEncounterData(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetEnteringObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetEnteringObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFacing(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFacing(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionEqual(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionEqual(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionAverageGoodEvilAlignment(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionAverageGoodEvilAlignment(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionAverageLawChaosAlignment(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionAverageLawChaosAlignment(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionAverageLevel(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionAverageLevel(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionAverageReputation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionAverageReputation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionAverageXP(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionAverageXP(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionBestAC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionBestAC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionGold(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionGold(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionLeastDamagedMember(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionLeastDamagedMember(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionLeader(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionLeader(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionMember(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionMember(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionMostDamagedMember(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionMostDamagedMember(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionMostFrequentClass(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionMostFrequentClass(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionNthNearestMember(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionNthNearestMember(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionStrongestMember(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionStrongestMember(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionWeakestMember(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionWeakestMember(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFactionWorstAC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFactionWorstAC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFamiliarCreatureType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFamiliarCreatureType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFamiliarName(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFamiliarName(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFogAmount(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFogAmount(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFogColor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFogColor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFootstepType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFootstepType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetFortitudeSavingThrow(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetFortitudeSavingThrow(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetGameDifficulty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetGameDifficulty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetGoingToBeAttackedBy(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetGoingToBeAttackedBy(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetGold(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetGold(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetGoldPieceValue(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetGoldPieceValue(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetGroundHeight(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetGroundHeight(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHardness(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHardness(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHasFeat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHasFeat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHasFeatEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHasFeatEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHasInventory(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHasInventory(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHasSkill(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHasSkill(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHasSpell(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHasSpell(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHasSpellEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHasSpellEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHenchman(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHenchman(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHiddenWhenEquipped(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHiddenWhenEquipped(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHitDice(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHitDice(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetHitpoints(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetHitpoints(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIdentified(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIdentified(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetImmortal(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetImmortal(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetInfiniteFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetInfiniteFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetInPersistentObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetInPersistentObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetInventoryDisturbItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetInventoryDisturbItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetInventoryDisturbType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetInventoryDisturbType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsAreaAboveGround(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsAreaAboveGround(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsAreaNatural(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsAreaNatural(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsAreaInterior(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsAreaInterior(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsCreatureDisarmable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsCreatureDisarmable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsDawn(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsDawn(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsDay(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsDay(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsDoorActionPossible(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsDoorActionPossible(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsDMPossessed(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsDMPossessed(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsDusk(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsDusk(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsEncounterCreature(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsEncounterCreature(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsImmune(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsImmune(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsInCombat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsInCombat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsInTrigger(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsInTrigger(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsNight(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsNight(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsOpen(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsOpen(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsSkillSuccessful(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsSkillSuccessful(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsPlayerDM(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsPlayerDM(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsRacialTypePlayable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsRacialTypePlayable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsReactionType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsReactionType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsResting(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsResting(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsTalentValid(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsTalentValid(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsTrapped(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsTrapped(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsWeaponEffective(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsWeaponEffective(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemACValue(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemACValue(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemCharges(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemCharges(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemCursedFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemCursedFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemHasItemProperty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemHasItemProperty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemInInventory(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemInInventory(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemInSlot(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemInSlot(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPossessedBy(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPossessedBy(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPossessor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPossessor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemProperty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemProperty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPropertyDuration(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPropertyDuration(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPropertyDurationRemaining(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPropertyDurationRemaining(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPropertyDurationType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPropertyDurationType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPropertyInfo(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPropertyInfo(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPropertyTag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPropertyTag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPropertyType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPropertyType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemPropertyUsesPerDayRemaining(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemPropertyUsesPerDayRemaining(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetItemStackSize(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetItemStackSize(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetJournalQuestExperience(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetJournalQuestExperience(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetKeyRequiredFeedbackMessage(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetKeyRequiredFeedbackMessage(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastAssociateCommand(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastAssociateCommand(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastAttacker(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastAttacker(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastAttackMode(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastAttackMode(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastAttackType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastAttackType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastDamager(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastDamager(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastDisarmed(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastDisarmed(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastDisturbed(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastDisturbed(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastHostileActor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastHostileActor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastEquipped(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastEquipped(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastKiller(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastKiller(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastLocked(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastLocked(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastOpenedBy(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastOpenedBy(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastClosedBy(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastClosedBy(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastPCRested(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastPCRested(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastPerceived(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastPerceived(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastPerception(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastPerception(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastRestEventType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastRestEventType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastSpeaker(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastSpeaker(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastSpellCastClass(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastSpellCastClass(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastTrapDetected(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastTrapDetected(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastUnlocked(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastUnlocked(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastUsedBy(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastUsedBy(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLastWeaponUsed(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLastWeaponUsed(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLeavingObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLeavingObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLimitAttackBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLimitAttackBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLimitDamageBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLimitDamageBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLimitSavingThrowBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLimitSavingThrowBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLimitAbilityBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLimitAbilityBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLimitAbilityPenalty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLimitAbilityPenalty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLimitSkillBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLimitSkillBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLocation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLocation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLocked(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLocked(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLockInfo(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLockInfo(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetLootable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetLootable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetMaster(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetMaster(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetMatchedString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetMatchedString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetMatchedStringsCount(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetMatchedStringsCount(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetMatchedStringsNum(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetMatchedStringsNum(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetMaxHenchmen(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetMaxHenchmen(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetMetaMagicFeat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetMetaMagicFeat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetModeState(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetModeState(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetModule(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetModule(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetModuleItemStuff(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetModuleItemStuff(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetModuleName(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetModuleName(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetMovementRate(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetMovementRate(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetName(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetName(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetNearestObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetNearestObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetNearestTrap(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetNearestTrap(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetNightTrack(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetNightTrack(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetNumStackedItems(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetNumStackedItems(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetObjectByTag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetObjectByTag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetObjectInArea(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetObjectInArea(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetObjectInShape(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetObjectInShape(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetObjectType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetObjectType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetObjectValid(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetObjectValid(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetObjectVisibility(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetObjectVisibility(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCChatMessage(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCChatMessage(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCChatSpeaker(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCChatSpeaker(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCChatVolume(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCChatVolume(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCIPAddress(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCIPAddress(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPlayerConnectionRelayed(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPlayerConnectionRelayed(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPlayerBuildInfo(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPlayerBuildInfo(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCLevellingUp(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCLevellingUp(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCPlayerName(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCPlayerName(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCPublicCDKey(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCPublicCDKey(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPCSpeaker(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPCSpeaker(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPhenoType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPhenoType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPickpocketableFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPickpocketableFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPlaceableIllumination(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPlaceableIllumination(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPlotFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPlotFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPortraitId(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPortraitId(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPortraitResRef(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPortraitResRef(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetPosition(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetPosition(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetRacialType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetRacialType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetRandomUUID(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetRandomUUID(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetReflexAdjustedDamage(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetReflexAdjustedDamage(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetReflexSavingThrow(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetReflexSavingThrow(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetReputation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetReputation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetResRef(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetResRef(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSittingCreature(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSittingCreature(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSkillRank(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSkillRank(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSkyBox(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSkyBox(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetScriptParam(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetScriptParam(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpecialization(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpecialization(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpellCast(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpellCast(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpellCasterItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpellCasterItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpellId(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpellId(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpellResistance(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpellResistance(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpellSaveDC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpellSaveDC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpellTargetLoc(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpellTargetLoc(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSpellTargetObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSpellTargetObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStartingPackage(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStartingPackage(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStolenFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStolenFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStrByStrRef(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStrByStrRef(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStringLeft(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStringLeft(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStringLength(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStringLength(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStringLowerCase(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStringLowerCase(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStringRight(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStringRight(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStringUpperCase(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStringUpperCase(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetStrRefSoundDuration(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetStrRefSoundDuration(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSubRace(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSubRace(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSubString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSubString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTileLightColor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTileLightColor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTimeHour(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTimeHour(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTimeMillisecond(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTimeMillisecond(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTimeMinute(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTimeMinute(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTimeSecond(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTimeSecond(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTotalDamageDealt(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTotalDamageDealt(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTrapInfo(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTrapInfo(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTurnResistanceHD(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTurnResistanceHD(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetUseableFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetUseableFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetUserDefinedEventNumber(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetUserDefinedEventNumber(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetVar(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetVar(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetWaypointByTag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetWaypointByTag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetTransitionTarget(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetTransitionTarget(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetSurfaceMaterial(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetSurfaceMaterial(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetWeaponRanged(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetWeaponRanged(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetWeather(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetWeather(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetWeight(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetWeight(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetWillSavingThrow(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetWillSavingThrow(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetXP(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetXP(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetXPScale(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetXPScale(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGiveGoldToCreature(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGiveGoldToCreature(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGiveXPToCreature(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGiveXPToCreature(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandGetIsPossessedFamiliar(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandGetIsPossessedFamiliar(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIncrementRemainingFeatUses(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIncrementRemainingFeatUses(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandInsertString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandInsertString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIntToFloat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIntToFloat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIntToHexString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIntToHexString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIntToString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIntToString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIsAIState(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIsAIState(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIsDM(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIsDM(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIsEffectValid(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIsEffectValid(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIsInConversation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIsInConversation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIsItemPropertyValid(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIsItemPropertyValid(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIsListening(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIsListening(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandIsPC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandIsPC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandItemActivated(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandItemActivated(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandItemPropertyEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandItemPropertyEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandLevelUpHenchman(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandLevelUpHenchman(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandLineOfSight(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandLineOfSight(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandLocation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandLocation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandLocationAccess(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandLocationAccess(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandLockCamera(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandLockCamera(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandMaterialShaderUniforms(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandMaterialShaderUniforms(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandMath(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandMath(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandModuleAccess(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandModuleAccess(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandMoveAwayFromObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandMoveAwayFromObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandMoveToObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandMoveToObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandMoveToPoint(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandMoveToPoint(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandMusicBackground(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandMusicBackground(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandMusicBattle(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandMusicBattle(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandObjectToString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandObjectToString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandObjectVisualTransform(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandObjectVisualTransform(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandOpenDoor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandOpenDoor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandOpenInventory(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandOpenInventory(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandOpenStore(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandOpenStore(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPersonalReputationAccess(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPersonalReputationAccess(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPickUpItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPickUpItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPlayAnimation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPlayAnimation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPlaySound(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPlaySound(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPlaySoundByStrRef(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPlaySoundByStrRef(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPopUpGUIPanel(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPopUpGUIPanel(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPostString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPostString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPrintFloat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPrintFloat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPrintInteger(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPrintInteger(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPrintLogEntry(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPrintLogEntry(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPrintString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPrintString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPrintObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPrintObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPrintVector(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPrintVector(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandPutDownItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandPutDownItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRandom(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRandom(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRandomName(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRandomName(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRecomputeStaticLighting(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRecomputeStaticLighting(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRemoveEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRemoveEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRemoveFromParty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRemoveFromParty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRemoveItemProperty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRemoveItemProperty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRemoveJournalQuestEntry(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRemoveJournalQuestEntry(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandReplaceObjectTexture(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandReplaceObjectTexture(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandResistSpell(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandResistSpell(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRestoreBaseAttackBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRestoreBaseAttackBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRestoreCameraFacing(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRestoreCameraFacing(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRetrieveCampaignObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRetrieveCampaignObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandRollDice(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandRollDice(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSavingThrow(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSavingThrow(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSendMessageToAllDMs(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSendMessageToAllDMs(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSendMessageToPC(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSendMessageToPC(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSendMessageToPCByStrRef(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSendMessageToPCByStrRef(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetAILevel(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetAILevel(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetAreaTransitionBMP(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetAreaTransitionBMP(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetAreaWind(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetAreaWind(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetAssociateListenPatterns(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetAssociateListenPatterns(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetBaseAttackBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetBaseAttackBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCalendar(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCalendar(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCameraHeight(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCameraHeight(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCameraLocation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCameraLocation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCameraMode(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCameraMode(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCampaignFloat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCampaignFloat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCampaignInt(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCampaignInt(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCampaignVector(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCampaignVector(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCampaignLocation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCampaignLocation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCampaignString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCampaignString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetColor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetColor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCommandable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCommandable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCreatureAppearanceType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCreatureAppearanceType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCreatureBodyPart(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCreatureBodyPart(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCreatureTailType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCreatureTailType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCreatureWingType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCreatureWingType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCurrentHitPoints(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCurrentHitPoints(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCustomToken(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCustomToken(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCutsceneMode(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCutsceneMode(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetCutsceneCameraMoveRate(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetCutsceneCameraMoveRate(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetDeity(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetDeity(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetDescription(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetDescription(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetDislike(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetDislike(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetDroppableFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetDroppableFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetEncounterData(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetEncounterData(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetFacing(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetFacing(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetFade(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetFade(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetFogAmount(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetFogAmount(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetFogColor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetFogColor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetFootstepType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetFootstepType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetHardness(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetHardness(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetHiddenWhenEquipped(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetHiddenWhenEquipped(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetIdentified(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetIdentified(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetImmortal(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetImmortal(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetInfiniteFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetInfiniteFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetIsDestroyable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetIsDestroyable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetItemCharges(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetItemCharges(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetItemCursedFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetItemCursedFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetItemPropertyUsesPerDayRemaining(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetItemPropertyUsesPerDayRemaining(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetItemStackSize(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetItemStackSize(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetKeyRequiredFeedbackMessage(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetKeyRequiredFeedbackMessage(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLike(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLike(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLimitAttackBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLimitAttackBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLimitDamageBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLimitDamageBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLimitSavingThrowBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLimitSavingThrowBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLimitAbilityBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLimitAbilityBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLimitAbilityPenalty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLimitAbilityPenalty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLimitSkillBonus(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLimitSkillBonus(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetListening(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetListening(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetListenString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetListenString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLockInfo(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLockInfo(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLocked(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLocked(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetLootable(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetLootable(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetMapPinEnabled(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetMapPinEnabled(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetMaxHenchmen(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetMaxHenchmen(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetName(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetName(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetObjectHiliteColor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetObjectHiliteColor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetObjectMouseCursor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetObjectMouseCursor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPanelButtonFlash(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPanelButtonFlash(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPCChatMessage(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPCChatMessage(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPCChatVolume(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPCChatVolume(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPhenoType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPhenoType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPickpocketableFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPickpocketableFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPlaceableIllumination(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPlaceableIllumination(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPlotFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPlotFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPortraitId(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPortraitId(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetPortraitResRef(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetPortraitResRef(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetSavingThrow(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetSavingThrow(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetScriptParam(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetScriptParam(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetSkyBox(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetSkyBox(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetStolenFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetStolenFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetSubRace(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetSubRace(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetSubType(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetSubType(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetTag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetTag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetTextureOverride(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetTextureOverride(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetTime(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetTime(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetTileLightColor(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetTileLightColor(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetTransitionTarget(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetTransitionTarget(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetTrapInfo(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetTrapInfo(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetUseableFlag(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetUseableFlag(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetVar(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetVar(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetWeather(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetWeather(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetXP(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetXP(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSetXPScale(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSetXPScale(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSignalEvent(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSignalEvent(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSoundObjectPlay(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSoundObjectPlay(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSoundObjectSetPosition(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSoundObjectSetPosition(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSoundObjectSetVolume(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSoundObjectSetVolume(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSoundObjectStop(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSoundObjectStop(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSpawnScriptDebugger(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSpawnScriptDebugger(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSpeakOneLinerConversation(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSpeakOneLinerConversation(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSpeakString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSpeakString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSpeakStrRef(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSpeakStrRef(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSqlBind(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSqlBind(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSqlGet(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSqlGet(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSqlGetError(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSqlGetError(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSqlPrepare(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSqlPrepare(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSqlResetDatabase(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSqlResetDatabase(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSqlStep(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSqlStep(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStandardFactionReputationAccess(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStandardFactionReputationAccess(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStartNewModule(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStartNewModule(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStopFade(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStopFade(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStoreGet(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStoreGet(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStoreSet(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStoreSet(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStoreCameraFacing(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStoreCameraFacing(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStoreCampaignObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStoreCampaignObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStringConversions(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStringConversions(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandStringToObject(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandStringToObject(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSummonAssociate(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSummonAssociate(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandSurrenderToEnemies(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandSurrenderToEnemies(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTagEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTagEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTagItemProperty(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTagItemProperty(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTakeGoldFromCreature(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTakeGoldFromCreature(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTalent(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTalent(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTalentAccess(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTalentAccess(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTargetingModeManagement(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTargetingModeManagement(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTileExplorationManagement(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTileExplorationManagement(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTimeConversions(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTimeConversions(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandTestString(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandTestString(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandUUIDManagement(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandUUIDManagement(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandUnequipItem(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandUnequipItem(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandUnpossessFamiliar(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandUnpossessFamiliar(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandVector(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandVector(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandVectorConversions(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandVectorConversions(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandVectorMagnitude(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandVectorMagnitude(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandVectorNormalize(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandVectorNormalize(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandVersusEffect(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandVersusEffect(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandVoiceChat(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandVoiceChat(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandVibrate(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandVibrate(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandUnlockAchievement(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandUnlockAchievement(swigCPtr, nCommandId, nParameters);
    return ret;
  }

  public int ExecuteCommandWait(int nCommandId, int nParameters) {
    int ret = NWNXLibPINVOKE.CNWVirtualMachineCommands_ExecuteCommandWait(swigCPtr, nCommandId, nParameters);
    return ret;
  }

}

}
