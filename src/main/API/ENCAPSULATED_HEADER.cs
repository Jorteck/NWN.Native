//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace NWN.Native.API {

public class ENCAPSULATED_HEADER : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ENCAPSULATED_HEADER(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ENCAPSULATED_HEADER obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ENCAPSULATED_HEADER() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public uint nFileType {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nFileType_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nFileType_get(swigCPtr);
      return ret;
    } 
  }

  public uint nFileVersion {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nFileVersion_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nFileVersion_get(swigCPtr);
      return ret;
    } 
  }

  public uint nNumLanguages {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nNumLanguages_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nNumLanguages_get(swigCPtr);
      return ret;
    } 
  }

  public uint nLocalizedStringSize {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nLocalizedStringSize_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nLocalizedStringSize_get(swigCPtr);
      return ret;
    } 
  }

  public uint nEntries {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nEntries_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nEntries_get(swigCPtr);
      return ret;
    } 
  }

  public uint nOffsetToLocalizedString {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nOffsetToLocalizedString_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nOffsetToLocalizedString_get(swigCPtr);
      return ret;
    } 
  }

  public uint nOffsetToKeyList {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nOffsetToKeyList_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nOffsetToKeyList_get(swigCPtr);
      return ret;
    } 
  }

  public uint nOffsetToResourceList {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nOffsetToResourceList_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nOffsetToResourceList_get(swigCPtr);
      return ret;
    } 
  }

  public uint nBuildYear {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nBuildYear_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nBuildYear_get(swigCPtr);
      return ret;
    } 
  }

  public uint nBuildDay {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nBuildDay_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nBuildDay_get(swigCPtr);
      return ret;
    } 
  }

  public uint nDescriptionStringRef {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_nDescriptionStringRef_set(swigCPtr, value);
    } 
    get {
      uint ret = NWNXLibPINVOKE.ENCAPSULATED_HEADER_nDescriptionStringRef_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char pMD5 {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_pMD5_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.ENCAPSULATED_HEADER_pMD5_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char pUnused {
    set {
      NWNXLibPINVOKE.ENCAPSULATED_HEADER_pUnused_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = NWNXLibPINVOKE.ENCAPSULATED_HEADER_pUnused_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

}

}
